#!/usr/bin/python
#  GENIVI Connection Manager
#
#  Copyright (C) 2010  BMW Car IT GmbH. All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2 as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import sys
import dbus
import dbus.service
import dbus.mainloop.glib
import gobject
import glib

def catchall_signal_handler(*args, **kwargs):
    print "Caught signal (in catchall handler) " + kwargs['dbus_interface'] + "." + kwargs['member']
    for arg in args:
        print "        " + str(arg)

def timeoutcb(bus, id):
    try:
        gcm = bus.get_object('org.genivi.gcm', '/')
        path = gcm.CreateGcmService(int(id), dbus_interface = 'org.genivi.gcm.Manager')
    except:
        print "failed to create gcm service, assume it already exists"
        path = "/service/0"

    try:
        gcm_service = bus.get_object('org.genivi.gcm', path)
        gcm_service.ConnectionRequest(dbus_interface = 'org.genivi.gcm.GcmService')
    except:
        print "could not request a connection"


dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
bus = dbus.SystemBus()

bus.add_signal_receiver(catchall_signal_handler, interface_keyword='dbus_interface', member_keyword='member')

id = 0
if len(sys.argv) > 1:
    id = sys.argv[1]

glib.timeout_add_seconds(1, timeoutcb, bus, id)

mainloop = gobject.MainLoop()
mainloop.run()
